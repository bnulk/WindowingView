using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace WindowingView
{
    public class GetVertice
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///                               画四边形例子
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        // 顶点数据数组，将会被上传到 VBO（顶点缓冲对象）中。
        // 每三个浮点数 (float) 表示一个顶点的 3D 坐标（X, Y, Z）。
        private static readonly float[] Vertices_Quad =
        {
            // 每行表示一个顶点：X     Y      Z
            0.5f,  0.5f, 0.0f,
            0.5f, -0.5f, 0.0f,
           -0.5f, -0.5f, 0.0f,
           -0.5f,  0.5f, 0.0f,
        };

        // 索引数组，将会被上传到 EBO（索引缓冲对象）中。
        // 每三个整数表示一个三角形使用的三个顶点的索引（指向上面 Vertices 数组的第几个顶点）。
        private static readonly uint[] Indices_Quad =
        {
            0, 1, 3,  // 第一个三角形：使用顶点 0、1、3
            1, 2, 3   // 第二个三角形：使用顶点 1、2、3
        };

        public static float[] GetVertices_Quad()
        {
            return Vertices_Quad;
        }

        public static uint[] GetIndices_Quad()
        {
            return Indices_Quad;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///                               画四边形例子    结束
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///                               纹理
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        // 顶点数据数组，将会被上传到 VBO（顶点缓冲对象）中。
        // 每三个浮点数 (float) 表示一个顶点的 3D 坐标（X, Y, Z）。
        private static readonly float[] Vertices_Texture =
        {
            // 每行表示一个顶点：X     Y      Z
            0.5f,  0.5f, 0.0f,   1.0f, 1.0f,   // 右上
            0.5f, -0.5f, 0.0f,   1.0f, 0.0f,   // 右下
           -0.5f, -0.5f, 0.0f,   0.0f, 0.0f,   // 左下
           -0.5f,  0.5f, 0.0f,   0.0f, 1.0f    // 左上
        };

        // 索引数组，将会被上传到 EBO（索引缓冲对象）中。
        // 每三个整数表示一个三角形使用的三个顶点的索引（指向上面 Vertices 数组的第几个顶点）。
        private static readonly uint[] Indices_Texture =
        {
            0, 1, 3,  // 第一个三角形：使用顶点 0、1、3
            1, 2, 3   // 第二个三角形：使用顶点 1、2、3
        };

        public static float[] GetVertices_Texture()
        {
            return Vertices_Texture;
        }

        public static uint[] GetIndices_Texture()
        {
            return Indices_Texture;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///                               纹理   结束
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////





        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///                               d轨道
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        
        public static float[] GetVertices_dOrbital()
        {
            return StructureChemistry.AtomOrbital.GetVertice();
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///                               d轨道   结束
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////





        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///                               坐标
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        private static readonly float[] Vertices_Coordinate =
        {
            //X    Y      Z     U   V
            -0.5f, -0.5f, -0.5f,  0.0f, 0.0f,
             0.5f, -0.5f, -0.5f,  1.0f, 0.0f,
             0.5f,  0.5f, -0.5f,  1.0f, 1.0f,
             0.5f,  0.5f, -0.5f,  1.0f, 1.0f,
            -0.5f,  0.5f, -0.5f,  0.0f, 1.0f,
            -0.5f, -0.5f, -0.5f,  0.0f, 0.0f,

            -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,
             0.5f, -0.5f,  0.5f,  1.0f, 0.0f,
             0.5f,  0.5f,  0.5f,  1.0f, 1.0f,
             0.5f,  0.5f,  0.5f,  1.0f, 1.0f,
            -0.5f,  0.5f,  0.5f,  0.0f, 1.0f,
            -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,

            -0.5f,  0.5f,  0.5f,  1.0f, 0.0f,
            -0.5f,  0.5f, -0.5f,  1.0f, 1.0f,
            -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,
            -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,
            -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,
            -0.5f,  0.5f,  0.5f,  1.0f, 0.0f,

             0.5f,  0.5f,  0.5f,  1.0f, 0.0f,
             0.5f,  0.5f, -0.5f,  1.0f, 1.0f,
             0.5f, -0.5f, -0.5f,  0.0f, 1.0f,
             0.5f, -0.5f, -0.5f,  0.0f, 1.0f,
             0.5f, -0.5f,  0.5f,  0.0f, 0.0f,
             0.5f,  0.5f,  0.5f,  1.0f, 0.0f,

            -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,
             0.5f, -0.5f, -0.5f,  1.0f, 1.0f,
             0.5f, -0.5f,  0.5f,  1.0f, 0.0f,
             0.5f, -0.5f,  0.5f,  1.0f, 0.0f,
            -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,
            -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,

            -0.5f,  0.5f, -0.5f,  0.0f, 1.0f,
             0.5f,  0.5f, -0.5f,  1.0f, 1.0f,
             0.5f,  0.5f,  0.5f,  1.0f, 0.0f,
             0.5f,  0.5f,  0.5f,  1.0f, 0.0f,
            -0.5f,  0.5f,  0.5f,  0.0f, 0.0f,
            -0.5f,  0.5f, -0.5f,  0.0f, 1.0f
        };


        public static float[] GetVertices_Coordinate()
        {
            return Vertices_Coordinate;
        }


        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///                               坐标   结束
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
























    }
}
